*usr_90.txt*	For Vim バージョン 6.3.  Last change: 2004 Mar 21

		     VIM USER MANUAL - by Bram Moolenaar

			      vimのインストール

								*install*
vimを使うにはまずインストールをする必要があります。システムにも依りますが、
とても簡単な作業です。この章では若干のヒントと新しいバージョンが出た時のアッ
プグレードの手順を説明します。

|90.1|	Unix
|90.2|	MS-Windows
|90.3|	アップグレード
|90.4|	インストールの共通事項
|90.5|	vimのアンインストール

 Previous chapter: |usr_45.txt|  言語を選ぶ
Table of contents: |usr_toc.txt|

==============================================================================
*90.1*	Unix

まず最初に、vimをシステム全体で使えるようにするのか、一人のユーザだけが使え
るようにするのかを決めなければなりません。インストール手順はおおむね同じです
が、vimのインストール先となるディレクトリが異なります。
システム全体で使えるようにインストールする時は、ベースディレクトリとして
"/usr/local"を使うことが多いでしょう。もちろんお使いのシステムによって違いが
あると思います。vim以外のパッケージがどこにインストールされているかを調べて
みてください。
一方、単独ユーザ向けにインストールする時は、そのユーザのホームディレクトリを
ベースディレクトリに使えます。各ファイルは"bin"とか"shared/vim"といったサブ
ディレクトリ下に置くことになるでしょう。


パッケージでインストール
------------------------

いろいろなUNIXシステム用のコンパイル済みバイナリがあります。次のページには多
数のリンク先のリストがあります。

	http://www.vim.org/binaries.html ~

バイナリのメンテナンスはボランティアベースです。ですから中には古いままになっ
ているものも多数あります。ですから自力でソースからコンパイルして専用のバー
ジョンを作るのも良いでしょう。また、ソースからコンパイルする場合はどの機能を
組み込むのかを自由に選択できます。当然ですがこれを行うにはコンパイラが必要と
なります。

Linuxのディストリビューションに入っている"vi"はおそらくvimの最少構成になって
います。シンタックスハイライトといった機能は組み込まれていません。そのディス
トリビューションから別のvimパッケージが配布されていないか、もしくはwebサイト
で公開されていないか調べてみましょう。


ソースからインストール
----------------------

vimをコンパイルした上でインストールするには次の環境が必要となります。

	-  何らかのＣコンパイラ(GCC が望ましい)
	-  GZIPアーカイバ(www.gnu.orgで入手可能)
	-  Vimのソースとランタイムのアーカイブ

vimのアーカイブを入手するには、次に示したファイルを見て近くの一番早くダウン
ロードできるミラーを見つけてください。

	ftp://ftp.vim.org/pub/vim/MIRRORS ~

もしくはvimのホームサイト(ftp.vim.org)で十分ならばそれを使っていただいても結
構です。そこにある"unix"ディレクトリに移動し、ファイルリストを見てください。
各ファイル名にはバージョン番号が埋め込んであります。普通は最新バージョンを入
手したいですよね。
さて、Unix用のファイルを入手するには２つの方法があります。１つは全てを含んだ
大きな単一アーカイブ、もう一つはそれぞれフロッピに入るように分割した４つの小
さ目のアーカイブです。例えばバージョン6.1の単一アーカイブのファイル名はこのよ
うになります。

	vim-6.1.tar.bz2 ~

この解凍には"bzip2"プログラムが必要です。もし持っていなければ４つの小さ目の
ファイルを入手してください。これならgzipで解凍ができます。vim6.1の場合はこの
ようなファイル名となります。

	vim-6.1-src1.tar.gz ~
	vim-6.1-src2.tar.gz ~
	vim-6.1-rt1.tar.gz ~
	vim-6.1-rt2.tar.gz ~


コンパイル

最初に作業用のトップディレクトリを作成します。例えばこのようにします。 >

	mkdir ~/vim
	cd ~/vim

次にここでアーカイブを解凍します。単一アーカイブを入手した場合なら解凍は次の
ようなコマンドで行います。 "path"の部分はあなたがファイルをダウンロードした
場所に読み替えてください。 >

	bzip2 -d -c path/vim-6.1.tar.bz2 | tar xf -

また、４つのアーカイブを入手した場合は次の通りです。 >

	gzip -d path/vim-6.1-src1.tar.gz | tar xf -
	gzip -d path/vim-6.1-src2.tar.gz | tar xf -
	gzip -d path/vim-6.1-rt1.tar.gz | tar xf -
	gzip -d path/vim-6.1-rt2.tar.gz | tar xf -

デフォルトの設定で満足していて、環境も適切にセットアップできているのであれ
ば、次のコマンドでvimをコンパイルできるはずです。 >

	cd vim61/src
	make

makeプログラムはconfigureを実行した上で全てをコンパイルしてくれます。設定を
変更してコンパイルする方法についてはこの後で説明します。
コンパイル中にエラーが発生した場合は、エラーメッセージをよく見てください。
何が悪かったのかを示す何らかのヒントが出ているはずです。きっとあなたならそれ
を見つけて修正できると思います。vimをコンパイルする時に一部の機能を禁止する
ことが必要かもしれません。Makefileを見て、お使いのシステム用の特記事項がない
か確認してください。


テスト
------

コンパイルが無事終われば、正しくコンパイルできたかをチェックしましょう。 >

	make test

ここではvimが所定の動きをするかどうかをチェックするための一連のテストスクリ
プトを実行します。vimが何回も起動し様々なメッセージや文字列が画面中に表示さ
れます。すべてが正しく動作していれば、最後にこのようなメッセージを表示しま
す。

	test results: ~
	ALL DONE ~

テストに失敗したというメッセージが１つ２つ表示された場合は、vimは動いている
ものの完全ではありません。また大量のメッセージが出たり、vimがいつまでも終わ
らなかったりする場合は何か問題があります。その原因を自力で探すか、誰か解決で
きる人に頼みましょう。メーリングリストの過去ログ(|maillist-archive|)を見て解
決できるかもしれません。それでもうまくいかない場合にはvimのメーリングリスト
(|maillist|)で聞いてみることもできます。助けてもらえるかもしれません。


インストール						*install-home*
------------

ホームディレクトリ下にインストールしたい場合は、Makefileの次の行を探してくだ
さい。

	#prefix = $(HOME) ~

この行頭の"#"を削除します。
システム全体で使えるようにインストールする場合は、適切と思われるインストール
ディレクトリを既に用意していあります。独自のディレクトリを指定する方法につい
ては後述します。なお、以下の作業を行うには"root"になる必要があります。

vimをインストールするには次のコマンドを使います。 >

	make install

これで関連する全てのファイルは適切な場所に移動するはずです。さあ、vimを動か
して、ちゃんと動くことを確かめましょう。次の２つのテストで、ランタイムのファ
イルをちゃんと見つけられるかどうかが分かります。 >

	:help
	:syntax enable

うまく動かない場合は、次のコマンドでvimがランタイムファイルを探そうとする
ディレクトリをチェックしてください。 >

	:echo $VIMRUNTIME

また、vimを起動する時に"-V"パラメタを付けておくと起動時に行っていることを
見ることができます。 >

	vim -V

ユーザマニュアルの記述はvimが確実に動いていることを前提としていることを忘れ
ないでください。インストールが終われば|not-compatible|の手順に従って、vimの
設定をこのマニュアルの前提としている状態にしてください。


機能の取捨選択
--------------

vimには機能を選択する方法をいろいろ用意していまっ。簡単なのはMakefileを直接
編集することです。ここには多くの使用方法や例題が載っています。機能の利用/禁
止はその行をコメントにするかしないかで設定します。
もう一つの方法は個別に"configure"を実行することです。これはコンフィギュレー
ションオプションを個々に指定できます。これの欠点は一つ一つ正確に指定しなけれ
ばならない点です。
もっともよく使うパラメタを次に示します。これはMakefileから有効にすることもで
きます。

	--prefix={directory}	vimをインストールするトップディレクトリ
	--with-features=tiny	多くの機能を禁止した状態でコンパイル
	--with-features=small	一部の機能を禁止した状態でコンパイル
	--with-features=big	多くの機能を有効にした状態でコンパイル
	--with-features=huge	ほとんどの機能を有効にした状態でコンパイル
				この場合に有効となる機能のリストについては
				|+feature-list|をご覧ください。

	--enable-perlinterp	Perlインタフェースを有効とする。同様にruby、
				python、tclのインタフェースを有効とするパラ
				メタも使えます。

	--disable-gui		GUIインタフェースをコンパイルしない。
	--without-x		X-windowsの機能をコンパイルしない
				この両方を指定した場合はvimはXサーバに接続し
				ないため、起動が早くなる。

この全リストを見るにはこうします。 >

	./configure --help

各機能についての簡単な説明とより詳しいリンク先情報については|feature-list|を
ご覧ください。
冒険好きなら"feature.h"を編集してみましょう。もちろんソースコードを自分で変
えていただいても構いませんよ！

==============================================================================
*90.2*	MS-Windows

vimをMicrosoft Windows上にインストールするには２つの方法があります。いくつか
のアーカイブを解凍するか、自己解凍の大きなアーカイブを使うか、です。最新型の
コンピュータを使っている方であれば、第２の方法で問題ありません。第１の方法を
行うには、以下が必要となります。

	- An archive with binaries for Vim.
	- vimのバイナリが入ったアーカイブ
	- vimのランタイムアーカイブ
	- zipファイルを解凍できるプログラム

vimのアーカイブを入手するには次に示したファイルから近くのダウンロードが一番
速いミラーサイトを探してください。

	ftp://ftp.vim.org/pub/vim/MIRRORS ~

速度に不満がなければ、vimのホームサイトである"ftp.vim.org"を使いましょう。
その"pc"ディレクトリに移動し、ファイルのリストを見てください。ファイル名には
バージョン番号が埋め込んであります。普通は最新バージョンを入手したいですよね。
ここではバージョン6.1の意味で"61"という文字列を使っています。

	gvim61.exe		自己解凍形式のアーカイブ

これは上で書いた第２の方法で必要な全てです。これは実行形式ですから、そのまま
実行して指示に従ってください。

第１の方法を取るにはバイナリアーカイブ群から１つを選ぶ必要があります。次のよ
うなアーカイブがあります。

	gvim61.zip		通常のMS-WinsowsのGUIバージョン
	gvim61ole.zip		OLEサポート付きのMS-WindowsのGUIバージョン
				メモリを食いますが他のOLEアプリケーションと
				の通信をサポートしています。
	vim61w32.zip		MS-Windows用の32ビットコンソールバージョン
				Windows NT/2000/XPのコンソール用です。ただし
				Windows 95/98/Meではうまく動きません。
	vim61d32.zip		32ビットのMS-DOSバージョン
				Windows 95/98のコンソール画面で使えます。
	vim61d16.zip		16ビットのMS-DOSバージョン
				ロングファイルネームをサポートしていない古い
				システム専用です。

これらのうち１つだけが必要です。もっともGUIバージョンとコンソールバージョン
は両方インストールできます。いずれの場合でもランタイムファイルのアーカイブ
も入手する必要があります。

	vim61rt.zip		ランタイムファイルのアーカイブ

このファイルを解凍するのにzipファイルを解凍できるプログラムが必要です。例え
ば"unzip"コマンドを使う場合であれば、このようにします。 >

	cd c:\
	unzip path\gvim61.zip
	unzip path\vim61rt.zip

ここでは"C:\vim\vim61"というディレクトリにファイルを展開しています。既に"vim"
というディレクトリが他にあって、そこに展開したいのであれば、その親ディレクト
リに移動してから上の"unzip"を実行してください。
展開ができれば、"vim\vim61"ディレクトリに移動してインストールプログラムを実
行します。 >

	install

メッセージをよく読んで希望のオプションを選択してください。最後に"do it"を選
択すると指定の処理を実行します。
インストールプログラムはランタイムファイル群は移動しません。解凍したところに
残ったままです。

提供されたバイナリに含まれた機能に不満があれば、vimを自力でコンパイルするこ
とができます。バイナリがあったのと同じ場所からソースのアーカイブを入手してく
ださい。コンパイルを行うには対応するMakefileがあるコンパイラが必要です。
Microsoft Visual Cでも動きますが高価です。無償のBorlandのコマンドラインコン
パイラ BC++5.5 は使えますし、やはり無償のMingWとCygwin のコンパイラも使えま
す。詳しくは"src/INSTALLpc.txt"をご覧ください。

==============================================================================
*90.3*	アップグレード

既にvimを使っていて、他をインストールしたい場合には、以下の作業が必要となり
ます。


UNIX
----

"make install"と入力すると、そのバージョン用に指定したディレクトリにはランタ
イムファイル群もコピーします。つまり以前のバージョンを上書きすることはないと
いうことです。ですから２つ以上のバージョンの使い分けることは問題ありません。
実行形式の"vim"は旧バージョンに上書きされます。もし古いバージョンを保全する
必要がないのであれば、"make install"でうまくいきます。古いバージョンのランタ
イムファイル群は手で削除します。次のようにバージョン番号を含んでいるディレク
トリを削除することで、その中にある全ファイルも自動的に削除できます。 >

	rm -rf /usr/local/share/vim/vim58

通常はこのディレクトリ下のファイルを変更することはありません。例えば
"filetype.vim"ファイルに変更を加えていた場合などは、削除する前に新バージョン
のファイルにその内容をマージしておくのが良いでしょう。

新しいバージョンに切り換える前に、少しの期間試用したい場合には新しいバージョ
ンを別の名前でインストールしてください。これは"configure"のパラメタで指定し
なければなりません。例えばこのようにします。 >

	./configure --with-vim-name=vim6

"make install"を実行する前に"make -n install"をしておけば、現状のファイルに
上書きされることがないかどうかを確認できます。
評価の結果、新しいバージョンに切り換えると決めた時には、実行形式のファイルを
"vim"に変更するだけです。このようにします。 >

	mv /usr/local/bin/vim6 /usr/local/bin/vim


MS-WINDOWS
----------

アップグレードは新しいバージョンをインストールするのとほとんどいっしょです。
以前のバージョンと同じ場所でファイルを解凍してください。すると(例えば"vim61"
といった)新たなディレクトリを生成します。ランタイムファイル群や、vimrcファイ
ル、viminfoなどは元の場所に残ったままになります。
もし古いバージョンの横にある新バージョンを実行するのなら、多少の手作業が必要
となります。インストールプログラムを使わないでください。一部の旧バージョンの
ファイルを上書きしてしまいます。新しいバイナリをフルパス指定で実行してくださ
い。vimは適切なバージョンのランタイムファイルがある場所を自動的に検出するこ
とができます。ただし、$VIMRUNTIME変数をどこかで定義しているとうまく動きませ
ん。
アップグレードの内容が満足のいくものであれば、旧バージョンのファイル群を削除
してもかまいません。|90.5|節をご覧ください。

==============================================================================
*90.4*	インストールの共通事項

このセクションではvimのインストール時に起きる問題点とその解決方法について説
明します。またインストール時によくある質問とその回答についても触れます。


Q: 私にはroot権限がありません。それでもvimをインストールできますか？(Unix)

次のようなパラメタを付けて"configure"を実行してください。この例では$HOME/vim
というディレクトリにvimがインストールされます。

	./configure --prefix=$HOME

これだとvimを個人用にセットアップします。エディタを動かすにはPATH変数に上で
指定した"$HOME/bin"を追加する必要があります。|install-home|もご覧ください。


Q: 私の画面では表示される色が正しくありません(Unix)

端末設定を見直してください。現在の端末設定はシェルから次のコマンドを使って
調べられます。 >

	echo $TERM

表示される端末のタイプが正しくない場合はそれを修正します。もっと詳しくは
|06.2|をご覧ください。もう一つの方法はgvimと呼ばれるvimのGUIバージョンを使う
ことです。これだと端末を正しく設定する必要がありません。


Q: BackSpaceキーとDeleteキーが正しく動いていないようです。

特にBackSpace<BS>とDelete<Del>は、どのキーを押した時にどのコードが送信されか
がとてもあいまいです。最初に$TERMの設定を確認してください。これが問題なけれ
ば、これを試してください。 >

	:set t_kb=^V<BS>
	:set t_kD=^V<Del>

最初の行の"^V<BS>"というのは CTRL-V を押してからキーボードのBackSpaceキーを
押すという意味です。２行目も同様に CTRL-V を押してからDeleteキーを押します。
この２行をユーザvimrcファイルに置いておきます。詳しくは|05.1|をご覧ください。
ただし、この方法だと後日端末を変えた時に動かなくなるかもしれないという欠点が
あります。これ以外の解決方法については|:fixdel|をご覧ください。


Q: 私はRedHad Linuxを使っています。システムに添付されているvimは使えますか？

RedHatのデフォルトでは最少構成のvimがインストールされています。RPMパッケージ
の中に"Vim-enhanced-version.rpm"といった名前のパッケージを探し、インストール
してください。


Q: (シンタックスの)カラー化をするにはどうすればいいですか？また、どうすれば
  プラグインが動くようにできますか？

例題のvimrcスクリプトを使ってください。これの使い方については|not-compatible|
の説明をご覧ください。
詳しくは「第６章 シンタックスハイライトを使う(|usr_06.txt|)」をご覧ください。


Q: 使い易いvimrcファイルとは何ですか？

ｗｅｂサイト(http://www.vim.org/)に良い例がいくつか置いてあります。


Q: どこにいけば優れたvimプラグインが入手できますか？

vim-onlineのサイト(http://vim.sf.net/)をご覧ください。多くのvimユーザが作っ
たスクリプトやプラグインがアップロードされています。


Q: どこにいけばもっとTipsが見つけられますか？

こちらもvim-onlineのサイト(http://vim.sf.net/)をご覧ください。vimユーザから
上ってきたいろいろなヒントのアーカイブがあります。この他にもメーリングリスト
のアーカイブ(|maillist-archive|)を検索するのも良いでしょう。

==============================================================================
*90.5*	vimをアンインストールする

あまり喜ばしいことではないですが、もしvimを完全にアンインストールしたければ
以下の手順でできます。


UNIX
----

vimをパッケージとしてインストールしたのであれば、パッケージマネージャを使っ
て、そのパッケージを除去する方法を調べてください。
ソースからインストールした場合は、このコマンドでアンインストールできます。 >

	make uninstall

しかし、元のインストール用ファイル群を削除してしまった場合や、他の人が作った
アーカイブを使った場合はこれができません。この場合は手作業でファイルを削除し
てください。"/usr/local"下にroot権限でインストールされている場合の例を示し
ます。 >

	rm -rf /usr/local/share/vim/vim61
	rm /usr/local/bin/eview
	rm /usr/local/bin/evim
	rm /usr/local/bin/ex
	rm /usr/local/bin/gview
	rm /usr/local/bin/gvim
	rm /usr/local/bin/gvim
	rm /usr/local/bin/gvimdiff
	rm /usr/local/bin/rgview
	rm /usr/local/bin/rgvim
	rm /usr/local/bin/rview
	rm /usr/local/bin/rvim
	rm /usr/local/bin/rvim
	rm /usr/local/bin/view
	rm /usr/local/bin/vim
	rm /usr/local/bin/vimdiff
	rm /usr/local/bin/vimtutor
	rm /usr/local/bin/xxd
	rm /usr/local/man/man1/eview.1
	rm /usr/local/man/man1/evim.1
	rm /usr/local/man/man1/ex.1
	rm /usr/local/man/man1/gview.1
	rm /usr/local/man/man1/gvim.1
	rm /usr/local/man/man1/gvimdiff.1
	rm /usr/local/man/man1/rgview.1
	rm /usr/local/man/man1/rgvim.1
	rm /usr/local/man/man1/rview.1
	rm /usr/local/man/man1/rvim.1
	rm /usr/local/man/man1/view.1
	rm /usr/local/man/man1/vim.1
	rm /usr/local/man/man1/vimdiff.1
	rm /usr/local/man/man1/vimtutor.1
	rm /usr/local/man/man1/xxd.1


MS-WINDOWS

自己解凍アーカイブを使ってvimをインストールした場合は、他のvimのプログラムと
同じディレクトリ(例えばc:\vim\vim61)にある"uninstall-gui"を実行してください。
Windowsの"スタート"メニューにvimのエントリがあれば、そこにあるものを使っても
構いません。これはほとんどのファイルを削除し、メニューエントリやデスクトップ
上のショートカットも削除します。一部のファイルは残る場合があります。その場合
は削除の前にWindowsを再起動しなければなりません。
vimディレクトリをまるごと削除するというやり方もあります。この場合はユーザ用
vimrcやあなたが作った他のランタイムファイルも全部消えてしまいますので、注意
してください。

他方、zipアーカイブを使ってvimをインストールした場合は"uninstal"(最後の"l"が
１つ少ないので間違いなく)を使うのをお勧めします。これは"install"プログラムな
どと同じディレクトリ、例えば"c:\vim\vim61"で見つけられます。また、コントロー
ルパネルの「アプリケーションの追加と削除」でも削除できます。
ただし、これはvim用のレジストリエントリを削除するだけです。ファイルは自分で
削除しなければなりません。単純に"vim\vim61"ディレクトリを選択して、削除する
だけです。このディレクトリ下にはあなたが変更を加えたファイルは入っていないは
ずですが、念のためチェックしておくのも良いでしょう。
"vim"ディレクトリにはユーザ用のvimrcファイルや自作のランタイムファイル群が入
っているでしょう。これを取っておいた方が良いかもしれません。

==============================================================================

Table of contents: |usr_toc.txt|

Copyright: see |manual-copyright|  vim:tw=78:ts=8:ft=help:norl:
